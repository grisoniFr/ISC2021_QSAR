<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Classification toolbox for MATLAB</title>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1">
<meta name="generator" content="HAPedit 3.0">

<link href = "style_structure.css" rel="stylesheet" type="text/css">
<link href = "style_text.css" rel="stylesheet" type="text/css">
<link href = "style_tables.css" rel="stylesheet" type="text/css">

</head>
<body>
<div id="container">
<a name="top"></a>

    <div id="header">
		<iframe src="header.htm" width="740" height="60" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
    </div>

    <div id="content">

		<table width="740" border="0" cellpadding="0" cellspacing="0">
  		<tr>
		<td width="150" valign="top">
		
		<iframe src="menu_lateral.htm" width="135" height="360" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
		
		</td>

    	<td valign="top">

		  <div align="justify">
		    <div id="tab_duo_contenitor" class="text">
		    <span class="title_page">MATLAB routines</span>		
		    <BR>
		    <BR>
    
		<div id="tab_duo_text">
			  <div id="tab_space_lateral"><a href="#sub_0" class="lnk_text">Open the graphical interface: class_gui</a></div>
		      <div id="tab_space_lateral"><a href="#sub_1" class="lnk_text">Routines for fitting models</a></div>
			  <div id="tab_space_lateral"><a href="#sub_2" class="lnk_text">Routines for validation </a></div>
		      <div id="tab_space_lateral"><a href="#sub_3" class="lnk_text">Routines for predicting new samples</a></div>
			  <div id="tab_space_lateral"><a href="#sub_4" class="lnk_text">Routines for optimising models</a></div>
	   	</div>
    
		<BR><a name="sub_0"></a>
		    <BR>
		    This is a list of the main  routines you can use to build classification models by means of the Classification toolbox for MATLAB: <BR>
		    <BR>
			<span class="title_paragraph">Open the graphical interface: class_gui</span><BR>
		    <BR>
class_gui opens the <a href="gui.htm" class="lnk_text">graphical interface (GUI)   for calculating all classification models </a>provided in the toolbox; in order to open the graphical interface, just type on the MATLAB command line:<br>
<br>
<div id="tab_duo_text"><span class="text_math"> class_gui</span></div>
<br>
there are no inputs; data can be loaded and saved directly from the 
 graphical interface.<BR>
<BR>[<a href="#top" class="lnk_text">-> top</a>]
		    <BR><a name="sub_1"></a><BR><BR>
		<span class="title_paragraph">Routines for fitting models </span><BR>
		    <BR>
Classification models can be calculated by means of the following routines:<BR>
Discriminant Analysis: <strong>dafit</strong> <BR>
Partial Least Square Discriminant Analysis (PLSDA): <strong>plsdafit</strong><BR>
Classification trees (CART): <strong>cartfit</strong><BR>
K-Nearest Neighbors (kNN): <strong>knnfit</strong><BR>
Potential Functions: <strong>potfit</strong><BR>
Support Vector Machines (SVM): <strong>svmfit</strong><BR>
Unequal class models (UNEQ): <strong>uneqfit</strong><BR>
Soft Independent Modeling of Class Analogy (SIMCA): <strong>simcafit</strong><BR>
Backpropagation Neural Networks (BPNN): <strong>backpropagationfit</strong><BR>
The output of the routines collects the calculated class vector [samples x 1], the  <a href="classparameters.htm" class="lnk_text">classification measures</a> in fitting, and other details. Type "help routine_name" on the MATLAB command window for further information.<BR>
		    <BR>
			[<a href="#top" class="lnk_text">-> top</a>]
		    <BR>
		    <a name="sub_2" id="sub_2"></a><BR>
		    <BR>
            <span class="title_paragraph">Routines for validation</span> <BR>
            <BR>
Validation of the classification models can be performed by means of the following routines:<BR>
Discriminant Analysis: <strong>dacv</strong> <BR>
Partial Least Square Discriminant Analysis (PLSDA): <strong>plsdacv</strong><BR>
Classification trees (CART): <strong>cartcv</strong><BR>
K-Nearest Neighbors (kNN): <strong>knncv</strong><BR>
Potential Functions: <strong>potcv</strong><BR>
Support Vector Machines (SVM): <strong>svmcv</strong><BR>
Unequal class models (UNEQ): <strong>uneqcv</strong><BR>
Soft Independent Modeling of Class Analogy (SIMCA): <strong>simcacv</strong><BR>
Backpropagation Neural Networks (BPNN): <strong>backpropagationcv</strong><BR>
The output of the routines collects the predicted class vector [samples x 1], the <a href="classparameters.htm" class="lnk_text">classification measures</a> in  validation, and other details. Cross validation can be performed with venetian blinds (i.e. with 3 cv groups the split of the first group will be [1,0,0,1,0,0,....,1,0,0] and so on) or contiguous blocks (i.e. the split of the first group will be [1,1,1,1,0,0,....,0,0,0] and so on). Moreover, bootstrap with resampling and validation based on random sampling (montecarlo) of 20% of samples can be calculated. Type "help routine_name" on the MATLAB command window for further information. <BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR><BR> <a name="sub_3" id="sub_3"></a>
		    <BR>
		
		<span class="title_paragraph">Routines for predicting new samples</span>
		    <BR>
		    <BR>
New samples can be predicted by means of the following routines:<BR>
Discriminant Analysis: <strong>dapred</strong> <BR>
Partial Least Square Discriminant Analysis (PLSDA): <strong>plsdapred</strong><BR>
Classification trees (CART): <strong>cartpred</strong><BR>
K-Nearest Neighbors (kNN): <strong>knnpred</strong><BR>
Potential Functions: <strong>potpred</strong><BR>
Support Vector Machines (SVM): <strong>svmpred</strong><BR>
Unequal class models (UNEQ): <strong>uneqpred</strong><BR>
Soft Independent Modeling of Class Analogy (SIMCA): <strong>simcapred</strong><BR>
Backpropagation Neural Networks (BPNN): <strong>backpropagationpred</strong><BR>
The output of the routines collects the predicted class vector [samples x 1] and other details. Type "help routine_name" on the MATLAB command window for further information.<BR>
		    <BR>
			
			[<a href="#top" class="lnk_text">-> top</a>]		    <BR>
			<BR>
            <a name="sub_4" id="sub_4"></a> <BR>
            <span class="title_paragraph">Routines for  optimising models</span> <BR>
            <BR>
The cross validation procedure for selecting the optimal parameters (components for PCA-DA, UNEQ and SIMCA, latent variables for PLSDA, number of neighbours for K-Nearest Neighbors, cost and kernel parameter for SVM, smoothing parameter for Potential Functions) can be performed with the following routines:<BR>
Discriminant Analysis coupled with PCA: <strong>dacompsel</strong> <BR>
Partial Least Square Discriminant Analysis (PLSDA): <strong>plsdacompsel</strong><BR>
Classification trees (CART): <strong>cartpred</strong><BR>
K-Nearest Neighbors (kNN): <strong>knnksel</strong><BR>
Potential Functions: <strong>potsmootsel</strong><BR>
Support Vector Machines (SVM): <strong>svmcostsel</strong><BR>
Unequal class models (UNEQ): <strong>uneqcompsel</strong><BR>
Backpropagation Neural Networks (BPNN): optimisation of BPNN is quite complex and thus no routines were provided to this end. By using the <strong>backpropagationfit</strong>, <strong>backpropagationcv </strong>and<strong> backpropagationpred</strong> one can define his/her own routine (and approach) to select the proper BPNN settings. <BR>
The output of the routines collects the error rate in cross validation (and non-error rate in cross validation) associated to each parameter value. Type "help routine_name" on the MATLAB command window for further information.<BR>
<BR>
[<a href="#top" class="lnk_text">-> top</a>] <BR>
<BR><BR>&nbsp;
			<BR>
			<BR>&nbsp;  	     
		 </div>
  
		  </div></td>
  		</tr>
	  </table>

    </div>

    <div id="footer">
		<iframe src="footer.htm" width="700" height="13" scrolling="no" frameborder="0">
  			no i_frames allowed :: change browser
	  	</iframe>
	</div>
</div>
</body>
</html>